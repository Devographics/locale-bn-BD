locale: en-US
namespace: css
translations:
  ###########################################################################
  # General
  ###########################################################################

  - key: general.state_of_html.intro
    t: |
      While web developers tend to focus on JavaScript and CSS, none of what we do would be even possible without HTML acting as a foundation for all of it. 

      And while it has long seemed like HTML wasn't evolving, things may be changing. New elements like `<selectmenu>` and `<breadcrumb>` are on the horizon, not to mention cool new features like popovers and declarative Shadow DOM.

      So with this survey, our goal is to fill in the gaps between the [State of JS](http://stateofjs.com/) and [State of CSS](https://stateofcss.com/) surveys, and help track the evolution of the web platform as a whole!

  - key: general.state_of_html.description
    t: The annual developer survey about the web platform

  ###########################################################################
  # Sections
  ###########################################################################

  - key: sections.forms.title
    t: Forms
  - key: sections.forms.description
    t: Form-related elements and attributes

  - key: sections.interactivity.title
    t: Interactivity
  - key: sections.interactivity.description
    t: APIs that enable richer user interactions.

  - key: sections.web_components.title
    t: Web Components
  - key: sections.web_components.description
    t: Making & using web components.

  - key: sections.external_content.title
    t: External Content
  - key: sections.external_content.description
    t: Embedding external resources, and other multimedia APIs.

  - key: sections.accessibility.title
    t: Accessibility
  - key: sections.accessibility.description
    t: Making sites and apps accessible by all.

  - key: sections.progressive_web_apps.title
    t: Progressive Web Apps
  - key: sections.progressive_web_apps.description
    t: Authoring mobile-optimized web apps.

  - key: sections.other_features.title
    t: Other Features
  - key: sections.other_features.description
    t: Other HTML elements & browser APIs.

  - key: sections.other_tools.title
    t: Other Tools
  - key: sections.other_tools.description
    t: Other tools you use as part of your work.

  - key: sections.usage.title
    t: Usage
  - key: sections.usage.description
    t: How you use HTML.

  ###########################################################################
  # Options
  ###########################################################################

  # CSS for print
  - key: options.css_for_print.0
    t: I (almost) never write print styles
  - key: options.css_for_print.0.short
    t: Never

  ###########################################################################
  # Features
  ###########################################################################

  # layout

  - key: features.foo_attribute
    t: "`{id}` attribute"

  - key: features.slot_assignment
    t: Explicit slot assignment (`slot="foo"`)

  - key: features.tabindex
    t: "`tabindex` attribute"

  - key: features.respimg
    t: "`srcset` and `sizes` attributes"

  - key: features.model_element
    t: "`<model>` for AR/VR/3D content"

  - key: features.slot_def
    t: Defining slots (`<slot>` and `::slotted()`)

  - key: features.controlslist
    t: "`controlslist` attribute"

  - key: features.popover_api
    t: Popover API

  - key: features.lazy_loading
    t: Lazy loading

  - key: features.sandbox_attr
    t: "`sandbox` attribute for iframes"

  - key: features.details_element
    t: "`<details>` and `<summary>`"

  - key: features.crossorigin
    t: "`crossorigin` attribute"

  - key: features.host_css
    t: Styling component host (`:host`, `:host()`, `:host-context()`)

  - key: features.element_internals
    t: "`ElementInternals` API"

  - key: features.cors
    t: CORS

  - key: features.csp
    t: Content-Security Policy (CSP)

  - key: features.structured_data
    t: Structured data (RDFa, Microdata, Microformats)

  - key: features.extended_builtins
    t: Extended built-ins

  - key: features.html_modules
    t: HTML Modules

  - key: features.accordion
    t: Exclusive accordion

  - key: features.imperative_slot
    t: Imperative slot assignment

  - key: features.focusgroup
    t: "`focusgroup` attribute"

  - key: features.form_validation
    t: Form validation

  - key: features.aria
    t: ARIA

  - key: features.rh_preconnect
    t: "Resource Hints: preconnect (`<link rel=preconnect>`)"

  - key: features.rh_prerender
    t: "Resource Hints: prerender (`<link rel=prerender>`)"

  - key: features.rh_preload
    t: "Resource Hints: preload (`<link rel=preload>`)"

  - key: features.resource_hints
    t: Resource Hints (all)

  - key: features.rh_prefetch
    t: "Resource Hints: prefetch (`<link rel=prefetch>`)"

  - key: features.declarative_shadow
    t: Declarative Shadow DOM (`<template shadowrootmode="open">`)

  - key: features.referrerpolicy
    t: "`referrerpolicy` attribute"

  - key: features.integrity
    t: Subresource Integrity (`integrity` attribute)

  - key: features.pwa_manifest
    t: PWA manifest

  - key: features.part_attr
    t: Exposing component parts (`part` attribute)

  - key: features.part_selector
    t: Styling component parts (`::part()`)

  - key: features.svg_element
    t: Inline SVG (`<svg>`)

  - key: features.math_element
    t: Inline MathML (`<math>`)

  - key: features.scoped_element_registries
    t: Scoped Custom Element Registries

  - key: features.navigation_api
    t: Navigation API

  - key: features.custom_elements_defining
    t: Defining Custom Elements

  - key: features.decoding
    t: "`decoding` attribute"

  - key: features.custom_elements_using
    t: Using Custom Elements

  - key: features.fencedframe
    t: Fenced frames

  - key: features.credentialless
    t: Credentialess iframes

  - key: features.media_capture
    t: HTML Media Capture

  - key: features.contenteditable_plaintext
    t: "`plaintext-only` value for `contenteditable`"

  - key: features.dom_parts
    t: DOM Parts

  - key: features.fetchpriority
    t: Fetch Priority API (`fetchpriority` attribute)

  - key: features.autocomplete
    t: '`autocomplete="hint"`'

  - key: features.inert_attribute
    t: "`inert` attribute"

  - key: features.client_hints
    t: HTTP client hints

  ###########################################################################
  # Resources
  ###########################################################################

  - key: resources.first_steps_css
    t: First Steps With CSS
  - key: resources.first_steps_css.description
    t: When first starting out, which resources did you use to initially learn CSS?

  ###########################################################################
  # Survey Help
  ###########################################################################

  - key: features.features_intro_css
    t: |
      Welcome to the survey! This first part is all about figuring out 
      which **features** of CSS you know about. 

      By the way, if you want to tell us more about any of your choices, just click that little "comment" icon!
